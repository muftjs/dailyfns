{"version":3,"file":"index.js","sources":["../src/src/capitalize/index.ts","../src/src/getGlobalVariable/index.ts","../src/src/getPathSegments/index.ts","../src/src/gqlParseError/index.ts","../src/src/isObj/index.ts","../src/src/isObjEmpty/index.ts","../src/src/objGetArrayPath/index.ts","../src/src/objGetPath/index.ts","../src/src/gqlErrorFirstMessage/index.ts","../src/src/isBlank/index.ts"],"sourcesContent":["export default function capitalize(word){\n\tif(!word) return '';\n\treturn word[0].toUpperCase()+word.slice(1).toLowerCase();\n}","/*\n get Node.js global Variable\n*/\nexport default function getGlobalVariable(): any {\n\treturn window;\n}","/**\n * Convert dot notation \"app.appName\" to array of strings ['app', 'appName']\n * @param path: string - \"app.appName\"\n * @returns strings[] - ['app', 'appName']\n */\n export default function getPathSegments(path: string): string[] {\n\tconst pathArray = path.split(\".\");\n\tconst parts: string[] = [];\n\n\tfor (let i = 0; i < pathArray.length; i++) {\n\t\tlet p = pathArray[i];\n\n\t\twhile (p[p.length - 1] === \"\\\\\" && pathArray[i + 1] !== undefined) {\n\t\t\tp = p.slice(0, -1) + \".\";\n\t\t\tp += pathArray[++i];\n\t\t}\n\n\t\tparts.push(p);\n\t}\n\n\tconst disallowedKeys = [\"__proto__\", \"prototype\", \"constructor\"];\n\n\tconst isValidPath = (pathSegments) => !pathSegments.some((segment) => disallowedKeys.includes(segment));\n\n\tif (!isValidPath(parts)) {\n\t\treturn [];\n\t}\n\n\treturn parts;\n}","export default function gqlParseError(err: Error) {\n  // let errstring = JSON.stringify(err, undefined, 2)\n  let errstring = JSON.stringify(err)\n  let errObj = JSON.parse(errstring)\n  return errObj\n}","/**\n *\n * @param value any - Check if values is Javascript Object or not\n * @returns bool - [TRUE | FALSE]\n */\n export default function isObj(value: any): boolean {\n\tconst type = typeof value;\n\treturn value !== null && (type === \"object\" || type === \"function\");\n}\n","/**\n * Check if Object is empty or not\n * @param obj Object\n * @returns bool - [TRUE | FALSE]\n */\n export default function isEmpty(obj): boolean {\n\tif (undefined == obj) return true;\n\tfor (var prop in obj) {\n\t\tif (Object.prototype.hasOwnProperty.call(obj, prop)) return false;\n\t}\n\treturn JSON.stringify(obj) === JSON.stringify({});\n}\n","import isObjEmpty from \"../isObjEmpty\"\n\n/**\n * Get Value from Javascript Objects using array of strings\n * @param object Object - {student : {name: 'test'}}\n * @param path string - ['student', 'name']\n * @param value any - Returns default value if values is undefined on object\n */\n export default function objGetArrayPath(obj, props: string[] = [], defaultValue = null): any {\n\tif (undefined == obj || isObjEmpty(obj)) return defaultValue;\n\n\tprops.forEach((element) => {\n\t\t// console.log(element, obj)\n\t\tif (undefined == obj || isObjEmpty(obj) || !Object.prototype.hasOwnProperty.call(obj, element)) {\n\t\t\tobj = defaultValue;\n\t\t\treturn;\n\t\t}\n\t\tobj = obj[element] ? obj[element] : defaultValue; // if obj[element]==null then return defaultValue\n\t});\n\n\treturn obj;\n}","import isObj from \"../isObj\"\nimport getPathSegments from \"../getPathSegments\"\nimport objGetArrayPath from \"../objGetArrayPath\"\n\n/**\n * Get Value from Javascript Objects using dot notation\n * @param object Object - {student : {name: 'test'}}\n * @param path string - 'student.name'\n * @param value any - Returns default value if values is undefined on object\n */\n export default function objGetPath(object, path, value: any = null): any {\n\tif (!isObj(object) || typeof path !== \"string\") {\n\t\t// return value === undefined ? object : value;\n\t\treturn value;\n\t}\n\n\tconst pathArray: string[] = getPathSegments(path);\n\tif (pathArray.length === 0) {\n\t\treturn;\n\t}\n\t// console.log(pathArray)\n\n\treturn objGetArrayPath(object, pathArray, value);\n}\n","import gqlParseError from \"../gqlParseError\"\nimport objGetPath from \"../objGetPath\"\nimport capitalize from \"../capitalize\"\n\n/**\n * Get First Error message as string from graphql-request or @types/ApolloError\n * @param err : Error\n * @returns string\n */\nexport default function gqlErrorFirstMessage(err: Error, option?: {capitalize?: boolean}): String {\n  let e = gqlParseError(err)\n\n  const errorPaths = [\n    \"graphQLErrors.0.message\", // All the validation error will occur here\n    \"networkError.result.errors[0].message\",\n    \"response.errors.0.message\",\n    \"networkError.result.message\",  // for rest api\n    \"message\",\n    \n  ];\n  const path = errorPaths.find((path) => objGetPath(e, path));\n\n  let msg = objGetPath(e, path);\n  if(option?.capitalize) return capitalize(msg);\n  return msg\n}","/**\n * Will return:\n * False for: for all strings with chars\n * True for: false, null, undefined, 0, 0.0, \"\", \" \".\n *\n * @param str\n * @returns {boolean}\n */\n export default function isBlank(str: any){\n  return (!!!str || /^\\s*$/.test(str));\n}\n"],"names":["isObjEmpty"],"mappings":"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"}